
<h3>Feedback Loop</h3>  
<p>
<ol style="list-style-type:lower-alpha">
  <li>Each subject area has it's own feedback loop (including feedback loops in general)</li>
  <li>Like the unit test, each loop will have expectations for quantifiable results within scope of the domain of study</li>
  <li>Feedback loops will favour "learning zone" area of difficulty</li>
  <li>Feedback loops will also favour quick results on repeatable functions with documentable modifications to process</li>
</ol><br />
<br />
<b>Tweekin:</b><br />
<br />
Methodology:
<ol>
  <li>Book Analogy:</li>
  <ol style="list-style-type:lower-alpha">
    <li><b>Title:</b>  This is the project title (examples: "Lecture 6 - Sorts: Insertion, Selection, Merge", "Home page for blog", etc)</li>
    <li><b>Chapter:</b>  This is a subject area within the project (examples: "Merge sort", "Main menu", etc)</b></li>
    <li><b>Point:</b>  This is within a "Chapter" - smallest division (examples: "Merge sort complexity", "Main menu text format", etc)</b></li>
    <li><b>Theme (maybe?):</b>  Not sure if this analogy is useful but this could be used to cross other subject boundaries</b></li>
    <li><b>Reference:</b>  Use this to reference the source of the study</b></li>
    <li><b>Footnote:</b>  A way of keeping track of un-related notes to review later</b></li>
  </ol>
</ol>
<br />
<br />
Tools:
<ol>
  <li>Want: Something (template in notepad, web form or whatever) that is:</li>
  <ol style="list-style-type:lower-alpha">
    <li>Quickly updatable</li>
    <li>Searchable</li>
    <li>Easily formattable</li>
  </ol>
</ol><br />
<br />
  
<b>Feedback loop:  </b>  My first time writing a lecture learning plan (shouldn't be, but there you have it), so here goes:
<ol>
  <li>Give my feedback loop a name and version #.</li>
  <li>Quick identify lecture and presumed topic</li>
  <li>Start lecture</li>
  <li>Identify topic</li>
    <ol style="list-style-type:lower-alpha">
      <li>Write down what I think my knowledge level is on the topic</li>
      <li>Take brief notes</li>
      <li>Identify any excercises mentioned</li>
      <li>If I feel a break is needed to try out my subject knowledge before answers are told, do so and document</li>
      <li>If answers are given to in-lecture notes, write them separate from problem so that the problem can be tried on my own</li>
    </ol>
  <li>repeat for each topic</li>
  <li>When lecture summary is about to happen or at the end if it doesn't, write lecture summary in my own words</li>
  <li>Post lecture</li>
  <li>Write down what I think my knowledge level is on the topic(s) after seeing lecture</li>
  <li>Write out a plan to test my knowledge on the topics</li>
  <li>Execute knowledge test plan</li>
  <li>Score the results</li>
  <li>Qualitatively analyze my work and tweek the feedback loop</li>
  <li>If further work is needed to improve my skills, identify and plan knowledge gain feedback loop</li>
</ol><br />
<b>Algorithms and Data Structures:  Online Lecture 6 for Comp1927 by R. Buckland</b><br />
<ol>
  <li>Feedback loop created</li>
  <li>Started lecture</li>
  <li>Created Selection sort before discussed in lecture</li>
  <li>Predicted Big O to n^2 for complexity -> correct
  <li>Created Insertion sort before discussed in lecture</li>
  <li>Predicted Big O to be n to n^2 for complexity (best case to worst) -> correct</li>
  <li>Finished lecture, given two assignments:</li>
    <ol style="list-style-type:lower-alpha">
      <li>Find better data-structure than array to use with insertion sort and implement better insertion point search (binary search was suggested)</li>
      <li>Resolve the complexity algorithm for merge sort given equation T(n) = T(n/2) + T(n/2) + n  where T represents time and equation is 1 level</li>
    </ol>
</ol>
</p>
