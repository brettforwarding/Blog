<h3>Rails Tutorial Chapter 7: Sign Up - step-by-step</h3>
<br />
<ol>
  <li>Start <a href="http://ruby.railstutorial.org/chapters/sign-up#top">Rails Tutorial - Chapter 7</a></li>
  <li>$ git branch</li>
  <ol>
    <li>Result:  </li>
    modeling-users<br />
    * master<br />
  </ol>
  <li>$ git co -b sign-up</li>
  <li>$ geany app/views/layouts/application.html.erb</li>
  <ol>
    <li>Add debug code under footer render line:</li>
    &lt;%= debug(params) if Rails.env.development? %><br />
  </ol>
  <li>$ geany app/assets/stylesheets/custom.css.scss</li>
  <ol>
    <li>Add some style to the debug param display in the css.  Under mixins, put:</li>
    @mixin box_sizing {<br />&nbsp;&nbsp;
      -moz-box-sizing: border-box; <br />&nbsp;&nbsp;
      -webkit-box-sizing: border-box; <br />&nbsp;&nbsp;
      box-sizing: border-box;<br />
    }<br />
    <li>Add the rest to the bottom of the css file:</li>
    /* miscellaneous */<br />

    .debug_dump {<br />&nbsp;&nbsp;
      clear: both;<br />&nbsp;&nbsp;
      float: left;<br />&nbsp;&nbsp;
      width: 100%;<br />&nbsp;&nbsp;
      margin-top: 45px;<br />&nbsp;&nbsp;
      @include box_sizing;<br />
    }<br />
  </ol>
  <li>$ rails s</li>
  <ol>
    <li>Visiting home page shows debug box at the bottom of the page which has:</li>
    --- !ruby/hash:ActiveSupport::HashWithIndifferentAccess<br />
    controller: static_pages<br />
    action: home<br />
    <li>This is a YAML representation of the params hash.  We can see the controller and action here.</li>
  </ol>
  <li>$ geany config/routes.rb</li>
  <ol>
    <li>Add route for users</li>
    <li>Replace:</li>
    get "users/new"
    <li>With:</li>
    resources :users
    <li>This one line endows our sample application with all the actions needed for a RESTful Users resource, along with a large number of named routes (Section 5.3.3) for generating user URIs.</li>
  </ol>
  <li>$ geany app/views/users/show.html.erb</li>
  <ol>
   <li>This page was not previously generated so we are creating it now.</li>
   <li>We'll create a temporary stub to help us set up information transfer.  Add the stub for showing user info:</li>
   &lt;%= @user.name %>, &lt;%= @user.email %><br />
  </ol>
  <li>$ geany app/controllers/users_controller.rb</li>
  <ol>
    <li>Add a show method above the default new method:</li>
    def show<br />&nbsp;&nbsp;
      @user = User.find(params[:id])<br />
    end<br />
  </ol>
  <li>$rails s</li>
  <ol>
    <li>Visiting /users/1 shows content:</li>
    Big Bird, bigbird@sesamestreet.com <br />
    <li>and debug info:</li>
    --- !ruby/hash:ActiveSupport::HashWithIndifferentAccess<br />
    action: show<br />
    controller: users<br />
    id: '1'<br />
  </ol>
  <li>$ geany spec/requests/user_pages_spec.rb</li>
  <ol>
    <li>Add a show page test:</li>
    describe "profile page" do<br />&nbsp;&nbsp;
      # Code to make a user variable<br />&nbsp;&nbsp;
      before { visit user_path(user) }<br />&nbsp;&nbsp;

      it { should have_selector('h1',    text: user.name) }<br />&nbsp;&nbsp;
      it { should have_selector('title', text: user.name) }<br />
    end<br />
    <li>Understanding to come...this is test driven dev after all - tests first!</li>
  </ol>
  <li>$ geany spec/factories.rb</li>
  <ol>
    <li>This is where all the FactoryGirl factories go (one of the gems).  They are automatically loaded by RSpec.</li>
    <li>Add this code to the blank file:</li>
    FactoryGirl.define do<br />&nbsp;&nbsp;
      factory :user do<br />&nbsp;&nbsp;&nbsp;&nbsp;
        name     "Michael Hartl"<br />&nbsp;&nbsp;&nbsp;&nbsp;
        email    "michael@example.com"<br />&nbsp;&nbsp;&nbsp;&nbsp;
        password "foobar"<br />&nbsp;&nbsp;&nbsp;&nbsp;
        password_confirmation "foobar"<br />&nbsp;&nbsp;
      end<br />
    end<br />
  </ol>
  <li>$ geany spec/requests/user_pages_spec.rb</li>
  <ol>
    <li>With the factory defined, we can replace the comment at the top of the describe "profile page" block with:</li>
    let(:user) { FactoryGirl.create(:user) }<br />
  </ol>
  <li>$ guard</li>
  <ol>
    <li>Results: ... 33 examples, 2 failures ...</li>
    <li>profile page tests failed as expected</li>
  </ol>
  <li>$ geany app/views/users/show.html.erb</li>
  <ol>
    <li>replace the stubs put there earlier with:</li>
    &lt;% provide(:title, @user.name) %><br />
    &lt;h1>&lt;%= @user.name %>&lt;/h1><br />
    <li>Result (guard still running):  ... 4 examples, 0 failures ...</li>
  </ol>
  <li>$ geany config/environments/test.rb</li>
  <ol>
    <li>Change bcrypt cost to speed up testing - lowers encryption security but who cares except for prod:</li>
    # Speed up tests by lowering BCrypt's cost function.<br />
    require 'bcrypt'<br />
    silence_warnings do<br />
      BCrypt::Engine::DEFAULT_COST = BCrypt::Engine::MIN_COST<br />
    end<br />
  </ol>
  <li>$ geany app/views/users/show.html.erb</li>
  <ol>
    <li>Add a Gravatar code insert to the h1 tag (in front of @user.name):</li>
    &lt;%= gravatar_for @user %><br />
  </ol>
  <li>$ guard</li>
 <ol>
    <li>Results: ... 33 examples, 2 failures ...</li>
    <li>profile page tests failed as expected</li>
  </ol>
  <li>$ geany app/helpers/users_helper.rb</li>
  <ol>
    <li>Add definition for gravitar_for in the users_helper (currently just contains definition with no content):</li>
    # Returns the Gravatar (http://gravatar.com/) for the given user.<br />
    def gravatar_for(user)<br />&nbsp;&nbsp;
      gravatar_id = Digest::MD5::hexdigest(user.email.downcase)<br />&nbsp;&nbsp;
      gravatar_url = "https://secure.gravatar.com/avatar/#{gravatar_id}"<br />&nbsp;&nbsp;
      image_tag(gravatar_url, alt: user.name, class: "gravatar")<br />
    end<br />
    <li>Results: ... 4 examples, 0 failures ...</li>
    <li>See <a href="http://en.gravatar.com/site/implement/hash/">Gravatar home page</a> for more about gravatars.</li>
  </ol>
  <li>$ rails console</li>
  <ol>
    <li>We'll edit first user (id=1) to be the rails example because Hartl has uploaded the rails logo for this example email:</li>
    <li>$ user = User.first</li>
    <li>$ user.update_attributes(name: "Example User", email: "example@railstutorial.org", password: "foobar", password_confirmation: "foobar")</li>
  </ol>
  <li>$ rails s</li>
  <ol>
    <li>Visit /users/1</li>
    <ol>
      <li>Success!</li>
    </ol>
  </ol>
  <li>$ geany app/views/users/show.html.erb</li>
  <ol>
    <li>Add sidebar with &lt;aside> tag (another new html5 tag).  Replace:</li>
    &lt;% provide(:title, @user.name) %><br />
    &lt;h1>  <br />&nbsp;&nbsp;
      &lt;%= gravatar_for @user %><br />&nbsp;&nbsp;
      &lt;%= @user.name %><br />
    &lt;/h1><br />
    <li>With:</li>
    &lt;% provide(:title, @user.name) %><br />
    &lt;div class="row"><br />&nbsp;&nbsp;
      &lt;aside class="span4"><br />&nbsp;&nbsp;&nbsp;&nbsp;
        &lt;section><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          &lt;h1><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            &lt;%= gravatar_for @user %><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            &lt;%= @user.name %><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          &lt;/h1><br />&nbsp;&nbsp;&nbsp;&nbsp;
        &lt;/section><br />&nbsp;&nbsp;
      &lt;/aside><br />
    &lt;/div><br />
  </ol>
  <li>$ geany app/assets/stylesheets/custom.css.scss</li>
  <ol>
    <li>Now to add some style to the sidebar and gravatar (note the nested sass):</li>
    /* sidebar */<br />

    aside {<br />&nbsp;&nbsp;
      section {<br />&nbsp;&nbsp;&nbsp;&nbsp;
        padding: 10px 0;<br />&nbsp;&nbsp;&nbsp;&nbsp;
        border-top: 1px solid $grayLighter;<br />&nbsp;&nbsp;&nbsp;&nbsp;
        &:first-child {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          border: 0;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          padding-top: 0;<br />&nbsp;&nbsp;&nbsp;&nbsp;
        }<br />&nbsp;&nbsp;&nbsp;&nbsp;
        span {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          display: block;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          margin-bottom: 3px;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          line-height: 1;<br />&nbsp;&nbsp;&nbsp;&nbsp;
        }<br />&nbsp;&nbsp;&nbsp;&nbsp;
        h1 {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          font-size: 1.6em;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          text-align: left;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          letter-spacing: -1px;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          margin-bottom: 3px;<br />&nbsp;&nbsp;&nbsp;&nbsp;
        }<br />&nbsp;&nbsp;
      }<br />
    }<br />

    .gravatar {<br />&nbsp;&nbsp;
      float: left;<br />&nbsp;&nbsp;
      margin-right: 10px;<br />
    }<br />
  </ol>
  <li>$ rake db:reset</li>
  <ol>
    <li>Gets rid of user created previously. </li>
  </ol>
  <li>$ rake db:test:prepare</li>
  <li>$ geany spec/requests/user_pages_spec.rb</li>
  <ol>
    <li>Now to add the signup process tests.  Add below the "signp page" block</li>
    describe "signup" do" }<br />&nbsp;&nbsp;
      before { visit signup_path }" }<br />&nbsp;&nbsp;
     
      let(:submit) { "Create my account" }<br />&nbsp;&nbsp;

      describe "with invalid information" do<br />&nbsp;&nbsp;&nbsp;&nbsp;
        it "should not create a user" do<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          expect { click_button submit }.not_to change(User, :count)<br />&nbsp;&nbsp;&nbsp;&nbsp;
        end<br />&nbsp;&nbsp;
      end<br />&nbsp;&nbsp;

      describe "with valid information" do<br />&nbsp;&nbsp;&nbsp;&nbsp;
        before do<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          fill_in "Name",         with: "Example User"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          fill_in "Email",        with: "user@example.com"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          fill_in "Password",     with: "foobar"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          fill_in "Confirmation", with: "foobar"<br />&nbsp;&nbsp;&nbsp;&nbsp;
        end<br />&nbsp;&nbsp;&nbsp;&nbsp;

        it "should create a user" do<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          expect { click_button submit }.to change(User, :count).by(1)<br />&nbsp;&nbsp;&nbsp;&nbsp;
        end<br />&nbsp;&nbsp;
      end<br />
    end<br />
    <li>Note: like the visit command, fill_in is a handy Capybara command to fill in page fields</li>
  </ol>
  <li>$ guard</li>
  <ol>
    <li>Results: ... 35 examples, 4 failures ...</li>
    <li>as expected, signup page tests failed</li>
  </ol>
  <li>$ geany app/views/users/new.html.erb</li>
  <ol>
    <li>Replace:</li>
    <p>Find me in app/views/users/new.html.erb</p>
    <li>With:</li>
    &lt;div class="row"><br />&nbsp;&nbsp;
      &lt;div class="span6 offset3"><br />&nbsp;&nbsp;&nbsp;&nbsp;
        &lt;%= form_for(@user) do |f| %><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

          &lt;%= f.label :name %><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          &lt;%= f.text_field :name %><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

          &lt;%= f.label :email %><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          &lt;%= f.text_field :email %><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

          &lt;%= f.label :password %><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          &lt;%= f.password_field :password %><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

          &lt;%= f.label :password_confirmation, "Confirmation" %><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          &lt;%= f.password_field :password_confirmation %><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

          &lt;%= f.submit "Create my account", class: "btn btn-large btn-primary" %><br />&nbsp;&nbsp;&nbsp;&nbsp;
        &lt;% end %><br />&nbsp;&nbsp;
      &lt;/div><br />
    &lt;/div><br />
    <li>Result (guard still running): ... 6 examples, 4 failures ...</li>
  </ol>
  <li>$ geany app/controllers/users_controller.rb</li>
  <ol>
    <li>Need to pass @user to the new definition, so Replace:</li>
    def new<br />
    end<br />
    <li>With:</li>
    def new<br />&nbsp;&nbsp;
      @user = User.new<br />
    end<br />
    <li>Results:  ... 6 examples, 4 failures ...</li>
    <li>Signup Page tests passed but not Signup tests</li>
    <li>To verify in a green way:  $ rspec spec/requests/user_pages_spec.rb -e "signup page"</li>
    <ol>
      <li>Results: .. 2 examples, 0 failures ..</li>
    </ol>
  </ol>
  <li>$ geany app/assets/stylesheets/custom.css.scss</li>
  <ol>
    <li>Add in style for form:</li>
    /* forms */<br />

    input, textarea, select, .uneditable-input {<br />&nbsp;&nbsp;
      border: 1px solid #bbb;<br />&nbsp;&nbsp;
      width: 100%;<br />&nbsp;&nbsp;
      padding: 10px;<br />&nbsp;&nbsp;
      height: auto;<br />&nbsp;&nbsp;
      margin-bottom: 15px;<br />&nbsp;&nbsp;
      @include box_sizing;<br />
    }<br />
  </ol>
  <li>$ rails s</li>
  <ol>
    <li>Visit /signup:  looks great!</li>
  </ol>
  <li>$ geany app/controllers/users_controller.rb</li>
  <ol>
    <li>Add create def:</li>
    def create<br />&nbsp;&nbsp;
      @user = User.new(params[:user])<br />&nbsp;&nbsp;
      if @user.save<br />&nbsp;&nbsp;&nbsp;&nbsp;
        # Handle a successful save.<br />&nbsp;&nbsp;
      else<br />&nbsp;&nbsp;&nbsp;&nbsp;
        render 'new'<br />&nbsp;&nbsp;
      end<br />
    end<br />
  </ol>
  <li>$ geany app/views/users/new.html.erb</li>
  <ol>
    <li>add render code to show error messages.  Place just below form_for block heading:</li>
    &lt;%= render 'shared/error_messages' %><br />
    <li>this follows Rails convention to use shared/ directory for partials viewed across multiple controllers</li>
  </ol>
  <li>$ mkdir app/views/shared/</li>
  <li>$ geany app/views/shared/_error_messages.html.erb</li>
  <ol>
    <li>Pasted in error display partial:</li>
    &lt;% if @user.errors.any? %><br />&nbsp;&nbsp;
      &lt;div id="error_explanation"><br />&nbsp;&nbsp;&nbsp;&nbsp;
        &lt;div class="alert alert-error"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          The form contains &lt;%= pluralize(@user.errors.count, "error") %>.<br />&nbsp;&nbsp;&nbsp;&nbsp;
        &lt;/div><br />&nbsp;&nbsp;&nbsp;&nbsp;
        &lt;ul><br />&nbsp;&nbsp;&nbsp;&nbsp;
        &lt;% @user.errors.full_messages.each do |msg| %><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          &lt;li>* &lt;%= msg %>&lt;/li><br />&nbsp;&nbsp;&nbsp;&nbsp;
        &lt;% end %><br />&nbsp;&nbsp;&nbsp;&nbsp;
        &lt;/ul><br />&nbsp;&nbsp;
      &lt;/div><br />
    &lt;% end %><br />
  </ol>
  <li>$ geany app/assets/stylesheets/custom.css.scss</li>
  <ol>
    <li>add some style to error messages (insert after form css):</li>
    #error_explanation {<br />&nbsp;&nbsp;
      color: #f00;<br />&nbsp;&nbsp;
      ul {<br />&nbsp;&nbsp;&nbsp;&nbsp;
        list-style: none;<br />&nbsp;&nbsp;&nbsp;&nbsp;
        margin: 0 0 18px 0;<br />&nbsp;&nbsp;
      }<br />
    }<br />

    .field_with_errors {<br />&nbsp;&nbsp;
      @extend .control-group;<br />&nbsp;&nbsp;
      @extend .error;<br />
     }<br />
  </ol>
  <li>$ geany app/controllers/users_controller.rb</li>
  <ol>
    <li>Replace:</li>
    # Handle a successful save.
    <li>With:</li>
    redirect_to @user<br />
  </ol>
  <li>$ guard</li>
  <ol>
    <li>Results: ... 35 examples, 0 failures ...</li>
  </ol>
  <li>$ geany app/views/layouts/application.html.erb</li>
  <ol>
    <li>Adding flash functionality.  This is a temporary hash that works in abstract like flash memory.</li>
    <li>Add just above the body's yeild insert (where main content is inserted):</li>
      &lt;% flash.each do |key, value| %><br />&nbsp;&nbsp;
        &lt;div class="alert alert-&lt;%= key %>">&lt;%= value %>&lt;/div><br />
      &lt;% end %><br />
  </ol>
  <li>$ geany app/controllers/users_controller.rb</li>
  <ol>
    <li>Add a flash message for a new signup.  Place just before the redirect_to @user:</li>
    flash[:success] = "Welcome to the Sample App!"<br />
  </ol>
  <li>$ rails s</li>
  <ol>
    <li>Visited home, clicked signup, entered cookie monster as user, redirected to show with flash message.  Cool!</li>
    <li>Refreshing page, flash message gone.  Even cooler!</li>
  </ol>
  <li>$ git add . && git commit -m "Finished ch 7 main - user signup"</li>
  <li>$ git co master</li>
  <li>$ git merge sign-up</li>
  <li>$ geany config/environments/production.rb</li>
  <ol>
    <li>Un-comment line to force ssl in production:</li>
    config.force_ssl = true<br />
  </ol>
  <li>$ git commit -am "Add SSL in Prod"</li>
  <li>$ git push heroku</li>
  <li>$ heroku run rake db:migrate</li>
  <ol>
    <li>Results: ...</li>
    Migrating to CreateUsers (20120611023745)<br />
    ==  CreateUsers: migrating ====================================================<br />
    -- create_table(:users)<br />
       -> 0.1679s<br />
    ==  CreateUsers: migrated (0.1684s) ===========================================<br /><br />
    Migrating to AddIndexToUsersEmail (20120612070244)<br />
    ==  AddIndexToUsersEmail: migrating ===========================================<br />
    -- add_index(:users, :email, {:unique=>true})<br />
       -> 0.0060s<br />
    ==  AddIndexToUsersEmail: migrated (0.0061s) ==================================<br /><br />
    Migrating to AddPasswordDigestToUsers (20120612095839)<br />
    ==  AddPasswordDigestToUsers: migrating =======================================<br />
    -- add_column(:users, :password_digest, :string)<br />
       -> 0.0038s<br />
    ==  AddPasswordDigestToUsers: migrated (0.0039s) ==============================<br />
  </ol>  
  <li>$ heroku open</li>
  <ol>
    <li>Added myself as user with example@railstutorial.org as email so that gravatar would appear.</li>
    <li>Success!  It is using https as well!</li>
  </ol>
  <li>$ geany app/helpers/users_helper.rb</li>
  <ol>
    <li>This is part of the ch7 excercises</li>
    <li>Replace current gravatar_for def with this one to incorporate size parameter:</li>
    def gravatar_for(user, options = { size: 50 })<br />&nbsp;&nbsp;
      gravatar_id = Digest::MD5::hexdigest(user.email.downcase)<br />&nbsp;&nbsp;
      size = options[:size]<br />&nbsp;&nbsp;
      gravatar_url = "https://secure.gravatar.com/avatar/#{gravatar_id}?s=#{size}"<br />&nbsp;&nbsp;
      image_tag(gravatar_url, alt: user.name, class: "gravatar")<br />
    end<br />
    <li>$ rails s</li>
    <ol>
      <li>Refreshed /users/1 page, successfully reduced gravatar size</li>
    </ol>
  </ol>
  <li>$ geany config/locales/en.yml</li>
  <ol>
    <li>Replace:</li>
    en:<br />&nbsp;&nbsp;
      Hello: "Hello World!"<br />
    <li>With:</li>
    en:<br />&nbsp;&nbsp;
      activerecord:<br />&nbsp;&nbsp;&nbsp;&nbsp;
        attributes:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          user:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            password_digest: "Password"<br />    
  </ol>
  <li>$ geany app/models/user.rb</li>
  <ol>
    <li>Removed presence: true from password validation as part of excercise to change password_digest error message</li>
  </ol>
</ol>
