<p>

<table>
<tr class="table-row-head">
  <td class="table-data-head" colspan=2 align="center"><b>Virtual Machine Host</b></td>
</tr>
<tr>
  <td>Manufacturer:</td>
  <td>Oracle</td>
</tr>
<tr>
  <td>Brand:</td>
  <td>VirtualBox</td>
</tr>
<tr>
  <td>Version:</td>
  <td>4.1.16</td>
</tr>
<tr>
  <td>Environment:</td>
  <td>MS Windows 7</td>
</tr>
<tr>
  <td>License:</td>
  <td>GPL (Open Source)</td>
</tr>
<tr class="table-row-head">
  <td class="table-data-head" colspan=2 align="center"><b>Virtual Machine Guest</b></td>
</tr>
<tr>
  <td>Operating System:</td>
  <td>CrunchBang (#!)</td>
</tr>
<tr>
  <td>Version:</td>
  <td>10 (Statler)</td>
</tr>
<tr>
  <td>License:</td>
  <td>GNU/Linux (Open Source)</td>
</tr>
<tr>
  <td>Base Distro:</td>
  <td>Debian Squeeze</td>
</tr>
<tr>
  <td>Kernel:</td>
  <td>Linux 2.6.32</td>
</tr>
<tr class="table-row-head">
  <td class="table-data-head" colspan=2 align="center"><b>Development Tools</b></td>
</tr>
<tr>
  <td>Programming Language:</td>
  <td>Ruby</td>
</tr>
<tr>
  <td>Version:</td>
  <td>1.9.3</td>
</tr>
<tr>
  <td>Environment Version Manager:</td>
  <td>RVM</td>
</tr>
<tr>
  <td>Code Version Manager:</td>
  <td>Git</td>
</tr>
<tr>
  <td>Dev. Web Server:</td>
  <td>WEBrick</td>
</tr>
<tr>
  <td>Prod. Web Server:</td>
  <td>Heroku</td>
</tr>
<tr>
  <td>GUI text editor:</td>
  <td>Geany</td>
</tr>
<tr>
  <td>Text-based editor:</td>
  <td>VIM-full</td>
</tr>

</table>
<br /> 
<br />
<big><b>How I got there...</b></big><br /> 
<br />

<b>New Dev Machine Build Plan</b><br /> 
<br />

<ol>
  <li> Virtual Box</li>
  <ol style="list-style-type: upper-alpha;">
    <li> Read manual<br \> 
    <li> Read online</li> 
    <li> Make notes on what interesting things can be done</li>
    <li> Make install plan</li>
    <li> Make room for it</li>
    <ol style="list-style-type: lower-roman;">
      <li> Backup laptop HDD</li>
      <li> Create install/rescue disk</li>
      <li> Move 40GB to external HDD</li>
      <li> Create recovery notes and blog them</li>
      <li> Store any passwords</li>
      <ol style="list-style-type: lower-alpha;">
        <li> Get password keeper</li>
      </ol>
    </ol>
  </ol>
  <li> Read up on new ruby versions</li>
  <ol style="list-style-type: upper-alpha;">
    <li> Current Ruby version</li>
    <li> Highest compatible version with Heroku/Git</li>
    <li> Any alternative to Heroku?  <vps></li>
    <ol style="list-style-type: lower-roman;">
      <li> Is it possible to push to both web servers with same git repo?</li>
    </ol>
    <li> Review all components needed and version they are stable with</li>
    <ol style="list-style-type: lower-roman;">
      <li> Bundler</li>
      <li> Unit tester</li>
      <li> Version control</li>
      <li> Virtual box Ruby enhancement?</li>
      <li> Search for other helpful ones</li>
    </ol>
    <li> List versions (2 or 3) in a table with features</li>
    <li> Choose versions</li>
    <li> Blog table, choice and reason for choice</li>
  </ol>
  <li> Search for ruby dev virtualbox packages</li> 
  <ol style="list-style-type: lower-roman;">
    <li> Does it match up with previous choice</li>
    <li> If there is no match to wants, plan to create one</li>
  </ol>
  <li> Start installation process</li> 
  <ol style="list-style-type: lower-roman;">
    <li> If not using a pre-packages VirtualBox machine then document the install <b>rigorously!</b></li>
  </ol>
</ol>  
  <br \> 
Notes:<br \> 
  - Heroku alternative: VPS (Virtual Private Server)<br \> 
  - Ruby language derivative: Rubinius -> adds JIT compiling to Ruby (mostly for speed reasons)<br \> 
  <br \> 
<b>HERE WE GO!</b><br />
<br />
<ol>
  <li>Choice of VM Software: Oracle VirtualBox</li>
  <li>Reason: Open Source (i.e. free!)
  <li>Installing VirtualBox</li>
  <ol style="list-style-type: upper-alpha;">
    <li>Install File:</li>
    <ol style="list-style-type: lower-roman;">
      <li>Filename: VirtualBox-4.1.16-78094-Win.exe</li>
      <li>Source: <a href="http://download.virtualbox.org/virtualbox/4.1.16/VirtualBox-4.1.16-78094-Win.exe">http://download.virtualbox.org/virtualbox/4.1.16/VirtualBox-4.1.16-78094-Win.exe</a></li>
      <li>Size: 93 MB</li>
    </ol>
    <li>Installation...</li>
    <ol style="list-style-type: lower-roman;">
      <li>Chose defaults</li>
      <li>Time to install: 4 minutes</li>
    </ol>
    <li>Result:</li>
    <ol style="list-style-type: lower-roman;">
      <li>File/Preferences</li>
      <ol style="list-style-type: lower-alpha;">
        <li> General</li>
        <ol>
          <li> Default Machine folder: C:\Users\brett\VirtualBox VMs</li>
          <li> VRDP Authentication Library: VBoxAuth (selected)</li>
        </ol>
        <li> Input</li>
        <ol>
          <li> Host Key: Right Ctrl</li>
          <li> Auto Capture Keyboard (selected)</li>
        </ol>
        <li> Update</li>
        <ol>
          <li> Check for updates (selected)</li>
          <ol style="list-style-type: upper-alpha;">
            <li>Once per: 1 day (selected)</li>
            <li>Next Check: 27/05/2012</li>
            <ol style="list-style-type: lower-roman;">
              <li> Check for: Stable release versions (selected)</li>
            </ol>
          </ol>
        </ol>
        <li> Language</li>
        <ol>
          <li>Interface Language: Default (selected)</li>
          <ol style="list-style-type: upper-alpha;">
            <li> Network</li>
          </ol>
          <li> Host-only Networks: VirtualBox Host-Only Ethernet Adapter (only entry in list)</li>
          <ol style="list-style-type: upper-alpha;">
            <li> Adapter: Manualy configured</li>
            <li> DHCP Server: Enabled</li>
          </ol>
        </ol>
        <li> Extensions</li>
        <ol>
          <li> Extension Packages:  <blank>  (no entries in list)</li>
          <ol style="list-style-type: upper-alpha;">
            <li> Proxy</li>
            <ol style="list-style-type: lower-roman;">
              <li> Enable proxy (not selected)</li>
            </ol>
          </ol>
        </ol>
      </ol>
    </ol>
  </ol>
  <li>Installing Extension Pack</li>
  <ol style="list-style-type: upper-alpha;">
    <li>Install File:</li>
    <ol style="list-style-type: lower-roman;">
      <li>Filename: Oracle_VM_VirtualBox_Extension_Pack-4.1.16-78094.vbox-extpack</li>
      <li>Source: <a href="http://download.virtualbox.org/virtualbox/4.1.16/Oracle_VM_VirtualBox_Extension_Pack-4.1.16-78094.vbox-extpack">http://download.virtualbox.org/virtualbox/4.1.16/Oracle_VM_VirtualBox_Extension_Pack-4.1.16-78094.vbox-extpack</a></li>
      <li>Size: 9 MB</li>
    </ol>
    <li>Installation...</li>
    <ol style="list-style-type: lower-roman;">
      <li> double-clicked on above file to install (VirtualBox Manager was running)</li>
      <li> Warning about system-modification - clicked install to continue</li>
      <li> Scrolled and clicked I Agree to the license agreement</li>
      <li> took all of about 15 seconds to install</li>
    </ol>
  </ol>
  <li>Result:</li>
  <ol style="list-style-type: lower-roman;">
    <li> File/Preferences</li>
    <ol style="list-style-type: lower-alpha;">
      <li> Extensions</li>
      <ol>
        <li> Extension Packages: Oracle VM...  (One entrie with a green check in the leftmost column)</li>
      </ol>
    </ol>
  </ol>
  <li>Create New VM</li>
  <ol style="list-style-type: upper-alpha;">
    <li> Installation...</li>
    <ol style="list-style-type: lower-roman;">
      <li>Click New</li>
      <li> VM Name and OS Type</li>
      <ol style="list-style-type: lower-alpha;">
        <li> Name: crunch10amd64</li>
        <li> OS Type:</li>
        <ol>
          <li> Operating System: Linux</li>
          <li> Version: Debian (64 bit)</li>
        </ol>
      </ol>
      <li> Memory</li>
      <ol style="list-style-type: lower-alpha;">
        <li> Total available: 4096 MB</li>
        <li> Recommended: 384 MB</li>
        <li> Base Memory Size: 1024 MB (I chose this)</li>
      </ol>
      <li> Virtual Hard Disk</li>
      <ol style="list-style-type: lower-alpha;">
        <li> Start-up Disk  (selected)</li>
        <li> Create new hard disk (selected)</li>
      </ol>
      <li> Create New Virtual Disk</li>
      <ol style="list-style-type: lower-alpha;">
        <li> VDI (Virtual Disk Image)  (Chosen - was default)</li>
        <ol>
          <li> Virtual disk storage details</li>
          <ol style="list-style-type: upper-alpha;">
            <li> Fixed size (Chosen - was not default)</li>
          </ol>
        </ol>
        <li> Virtual disk file location and size</li>
        <ol>
          <li> Location: crunch10amd64 (default folder)</li>
          <ol style="list-style-type: upper-alpha;">
            <li> Size: 30.00 GB (Chosen)</li>
          </ol>
        </ol>
      </ol>
      <li> Summary:</li>
      <ol style="list-style-type: lower-alpha;">
        <li>File type:  VDI (VirtualBox Disk Image)</li>
        <li>Details:  Fixed size storage</li>
        <li>Location:  C:\Users\brett\VirtualBox VMs\crunch10amd64\crunch10amd64.vdi</li>
        <li>Size:  30.00 GB (32212254720 B)</li>
      </ol>
      <li> Took time to create due to 30GB fixed drive spec: < 10min</li>
    </ol>
  </ol>
  <li> Install Crunchbang! 10</li>
  <ol style="list-style-type: upper-alpha;">
    <li> Installation...</li>
    <ol style="list-style-type: lower-roman;">
      <li> Settings / storage</li>
      <ol style="list-style-type: lower-alpha;">
        <li> Ide Controller, select Empty</li>
        <li> Attributes</li>
        <ol>
          <li> CD/DVD Drive: IDE Secondary Master (selected)</li>
          <ol style="list-style-type: upper-alpha;">
            <li> click on disk icon to the right</li>
            <li> Browse to crunchbang iso</li>
          </ol>
        </ol>
      </ol>
      <li> Start VM</li>
      <ol style="list-style-type: lower-alpha;">
        <li>Crunchbang setup</li>
        <ol>
          <li> chose graphical installer</li>
          <li> Location: Canada</li>
          <li> Language: American English</li>
          <li> Hostname: crunchbang (default)</li>
          <li> User: brett</li>
          <li> Password: ma...5...</li>
          <li> Configure the clock</li>
          <ol style="list-style-type: upper-alpha;">
            <li> Time zone: Atlantic</li>
          </ol>
          <li> Partition disks:</li>
          <ol style="list-style-type: upper-alpha;">
            <li> Partition Method: Guided - user entire disk (default)</li>
            <li> Select disk to partition:</li>
            <ol style="list-style-type: lower-roman;">
              <li>scsi1 (0,0,0)(sda) - 32.2 GB ATA VBOX HARDDISK (only choice)</li>
            </ol>
            <li> Partitioning Scheme: All files in one partition (default)</li>
            <li> Summary:</li>
            <ol style="list-style-type: lower-roman;">
              <li>#1 primary 30.9GB B f ext4 /</li>
              <li>#5 logical  1.4GB   f swap swap</li>
            </ol>
            <li> Finish partitioning and write changes to disk (selected - default)</li>
            <li> write changes to disks?</li>
            <ol style="list-style-type: lower-roman;">
              <li> Yes (selected)</li>
            </ol>
            <li> Partition progress bar sat at partway for 10 seconds then went to installing the system</li>
          </ol>
          <li> Install the GRUB boot loader to the master boot record?</li>
          <ol style="list-style-type: upper-alpha;">
            <li> Yes (selected - default)</li>
          </ol>
          <li> Prompt to remove install disk - clicked continue</li>
        </ol>
        <li> After restart, powered down VM</li>
        <li> Settings / Storage
        <ol>
          <li> Ide Controller, select Empty</li>
          <li> Attributes</li>
          <li> CD/DVD Drive: IDE Secondary Master (selected)</li>
          <ol style="list-style-type: upper-alpha;">
            <li> click on disk icon to the right</li>
            <ol style="list-style-type: lower-roman;">
              <li> Select Host Drive D:</li>
            </ol>
            <li>Pass Through: Checked</li>
          </ol>
        </ol>
        </li>
      </ol>
    </ol>
    <li> Restart VM</li>
    <ol style="list-style-type: lower-roman;">
      <li> Crunchbang loads</li>
      <li> cb-welcome script auto-runs</li>
      <ol style="list-style-type: lower-alpha;">
        <li> chose to continue with updates</li>
        <li> internet connection passed</li>
        <li> Update cb? yes</li>
        <li> updated  (was pretty quick)</li>
        <li> Update packages? yes</li>
        <li> updated (was longer)</li>
        <li> Install printer support: Yes  (installs CUPS-Common Unix Printing System)</li>
        <li> Install Java Support? Skip (I will install only when I need it)</li>
        <li> Install LibreOffice? Skip</li>
        <li> Install Development Packages? See options</li>
        <ol>
          <li> Version Control Tools? Yes</li>
          <li>git mercurial subversion subversion-tools bzr bzrtools cvs</li>
          <ol style="list-style-type: upper-alpha;">
            <li> seemed like mostly python stuff with some perl as well as base tools</li>
          </ol>
        </ol>
        <li> Install SSH Server? Yes</li>
        <li> Install LAMP Stack? Yes
        <ol>
          <li>apache2 mysql-server php5 php-pear php5-gd php5-mysql php5-imagick php5-curl curl phpmyadmin rsync cronolog</li>
          <li> MySQL password: s..5...</li>
          <li> Web server configured to run php automatically: apache2 (default)</li>
          <li> Configure database for phpmyadmin with dbconfig-common? Yes (default)</li>
          <li> Password for phpadmin: s..5...</li>
          <li> Password for sqladmin: s..5...</li>
          <li> Create symlink from Apache's document root to home directory? Yes
          <li> file path: /hom/brett/htdocs</li>
        </ol>
        <li> Install Developer Environment for Debian Packaging? Yes
        <ol>
          <li> build-essential debhelper cdbs dh-make diff patch gnupg fakeroot lintian devscripts pbuilder dpatch dput quilt</li>
          <li> not sure if I will ever need it though</li>
          <li> Create Pbuilder environment now?  Y</li>
          <ol style="list-style-type: upper-alpha;">
            <li> Valid Release signature (key id 9FED2B2BDSC29CDF762678CBAED4B06F473041FA)</li>
        </ol>
        <li> Finished!</li>
      </ol>
    </ol>
  </ol>
</ol>
<br \> 
</p>
<p> 
<b>Ruby Install Plan</b><br \> 
<br \> 
Install Plan guide found at: <br \>
&nbsp;&nbsp;<a href="http://blog.binarybalance.com.au/2011/10/31/compiling-ruby-1-9-3-on-debian-squeeze">http://blog.binarybalance.com.au/2011/10/31/compiling-ruby-1-9-3-on-debian-squeeze</a><br \> 
<br \> 
<br \> 
<ol>
  <li> Install system ruby (should be 1.8.7 on #!10)</li> 
  sudo aptitude install ruby<br \>
  <li> Install rvm (may encounter issues due to backports)</li>
  <blockquote style="text-align: left">$ bash < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer )</blockquote>
 *note: curl git and svn already installed from cb-welcome scripts<br />
  <li> Install more requirements</li>
  sudo aptitude install build-essential libreadline6-dev git-core zlib1g-dev l<br \> 
  <li> Set-up Git</li>
  <li> Setup for Heroku push</li>
  <li> Setup requirements for local compile and testing (Sinatra and web server)</li>
  <li> Test locally</li>
  http://localhost:4567/<br />
  <li> Setup Thin webserver</li>
</ol> 
<br \> 
<br \> 
</p>
<p> 
<b>Ruby Install Progress</b><br \>
<br \>
<ol>
  <li> Ruby 1.8.7 installed (patch 302)</li>
  <li> RVM installed</li>
  <ol style="list-style-type: upper-alpha;">
    <li> Check command: ls -la ~/ | grep .rvm</li>
    <li> Return: drwxr-xr-x 23 brett brett 4096 May 26 10:07 .rvm</li>
  </ol>
  <li> Test RVM "type rvm | head -1" did not return rvm is a function but...</li>
  <ol style="list-style-type: upper-alpha;">
    <li> Return: rvm is /home/brett/.rvm/bin/rvm</li>
  </ol>
  <li> Add command to bash profile</li>
  <ol style="list-style-type: upper-alpha;">
    <li>echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function' >> ~/.bash_profile</li>
    <li> test RVM "type rvm | head -1" - failed</li>
  </ol>
  <li> Add command to bashrc</li>
  <ol style="list-style-type: upper-alpha;">
    <li> Found this on website: <a href="http://www.andrewsturges.com/2011/05/installing-rvm-ruby-version-manager-on.html">http://www.andrewsturges.com/2011/05/installing-rvm-ruby-version-manager-on.html</a></li>
    <li> echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function' >> ~/.bashrc</li>
    <li> test RVM "type rvm | head -1" - success (returns rvm is a function)</li>
  </ol>
  <li> Installed more requirements</li>
  <ol style="list-style-type: upper-alpha;">
    <li> ran: sudo aptitude install build-essential libreadline6-dev git-core zlib1g-dev l</li>
  </ol>
  <li> Installed ruby 1.9.3</li>
  <ol style="list-style-type: upper-alpha;">
    <li> command: rvm install 1.9.3</li>
    <li> install successful</li>
    <li> test: rvm use 1.9.3</li>
    <li> result: Using /home/brett/.rvm/gems/ruby-1.9.3-p194</li>
    <li> test: ruby -v</li>
    <li> result: ruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-linux]</li>
  </ol>
  <li> Setup git</li>
  <ol style="list-style-type: upper-alpha;">
    <li> ssh key (instructions at http://help.github.com/linux-set-up-git/ )</li>
    <ol style="list-style-type: lower-roman;">
      <li> check if one exists: cd ~/.ssh</li>
      <ol style="list-style-type: lower-alpha;">
        <li> Return: bash: cd: /home/brett/.ssh: No such file or directory</li>
      </ol>
      <li> Generate key: ssh-keygen -t rsa -C "brettforwarding@gmail.com"</li>
      <ol style="list-style-type: lower-alpha;">
        <li> Return: </li>
        <ol>
          <li>Enter passphrase:</li>
          <li> entered: mo....1</li>
          <li> confirmed</li>
          <li> Return: Your identification has been saved in /home/brett/.ssh/id_rsa. Your public key has been saved in /home/brett/.ssh/id_rsa.pub.</li>
        </ol>
      </ol>
      <li> Copy public key by opening file in text editory Geany: geany ~/.ssh/id_rsa.pub</li>
      <li> Login to github and add ssh key (3rd one there all with title brettforwarding@gmail.com - not sure about the titles )</li>
    </ol>
    <li> set globals</li>
    <ol style="list-style-type: lower-roman;">
      <li> username: git config --global user.name "Brett"</li>
      <li> email: git config --global user.email "brettforwarding@gmail.com"</li>
    </ol>
    <li> Checkout blog repository: git clone git@github.com:brettforwarding/Blog.git</li>
    <ol style="list-style-type: lower-roman;">
      <li> cloning...blah,blah...continue?: yes</li>
      <li> Enter passphrase for key '/home/brett/.ssh/id_rsa': mo....1</li>
      <li> counting, compressing, totals, receiving objects, receiving deltas => done</li>
      <li> path: ~/mystuff/projects/blog/Blog</li>
      <li> oops! hmmm...remove blog folder and contents and redo?  I think so</li>
      <li> from projects folder: rm -rf blog</li>
      <li> clone again</li>
      <li> path: ~/mystuff/projects/Blog</li>
    </ol>
    <li> test update</li>
    <ol style="list-style-type: lower-roman;">
      <li> Edit file: geany ./lib/views/week20.erb</li>
      <li> update in Geany and save</li>
      <li> git add . && commit -m "blah, blah"</li>
      <li> git push git@github.com:brettforwarding/Blog.git master</li>
      <li> Verify on github:  Edit successful</li>
    </ol>
  </ol>
  <li> Setup Heroku requirements</li>
  <ol style="list-style-type: upper-alpha;">
    <li> Get requirements from site: https://toolbelt.heroku.com/linux</li>
    <li> Run command from site: wget -qO- https://toolbelt.heroku.com/install.sh | sh</li>
    <li> Test heroku login on site: mo.... was successful</li>
    <li> login from shell: heroku login</li>
    <ol style="list-style-type: lower-roman;">
      <li> email, password</li>
      <li> authentication successful</li>
    </ol>
    <li> add heroku remote to git</li>
    <ol style="list-style-type: lower-roman;">
      <li> git remote add heroku git@heroku.com:floating-beach-3672.git</li>
      <li> verify: git remote -v</li>
      <li> Result: </li>
      <ol style="list-style-type: lower-alpha;">
        <li> heroku	git@heroku.com:floating-beach-3672.git (fetch)</li>
         heroku	git@heroku.com:floating-beach-3672.git (push)<br \> 
         origin	git@github.com:brettforwarding/Blog.git (fetch)<br \> 
         origin	git@github.com:brettforwarding/Blog.git (push)<br \> 
      </ol>
      <li> add ssh key to heroku: heroku keys:add</li>
      <ol style="list-style-type: lower-alpha;">
        <li> Result: Found existing public key: /home/brett/.ssh/id_rsa.pub  Uploading SSH public key /home/brett/.ssh/id_rsa.pub... done</li>
      </ol>
    </ol>
    <li> push local git repo to heroku</li>
    <ol style="list-style-type: lower-roman;">
      <li> git push heroku master</li>
    </ol>
    <li> Verify in web browser that change showed up</li>
    <ol style="list-style-type: lower-roman;">
      <li> Successful</li>
    </ol>
  </ol>
  <li> Install Sinatra</li>
  <ol style="list-style-type: upper-alpha;">
    <li> Check installed gems: gem list</li>
    <ol style="list-style-type: lower-roman;">
      <li> Result:</li>
      <ol style="list-style-type: lower-alpha;">
        <li> bundler (1.1.3)</li>
         rake (0.9.2.2)<br \>
         rubygems-bundler (1.0.2)<br \>
         rvm (1.11.3.3)<br \>
      </ol>
    </ol>
    <li> gem install sinatra</li>
    <li> Sinatra and dependencies installed</li>
    <li> gem list</li>
    <li> Result: </li>
    <ol style="list-style-type: lower-roman;">
      <li> bundler (1.1.3)</li>
       rack (1.4.1)<br \> 
       rack-protection (1.2.0)<br \> 
       rake (0.9.2.2)<br \> 
       rubygems-bundler (1.0.2)<br \> 
       rvm (1.11.3.3)<br \> 
       sinatra (1.3.2)<br \> 
       tilt (1.3.3)<br \> 
    </ol>
  </ol>
  <li> Test Blog locally</li>
  <ol style="list-style-type: upper-alpha;">
    <li> from prompt: brett@crunchbang:~/mystuff/projects/Blog/lib$ ruby blog.rb</li>
    <ol style="list-style-type: lower-roman;">
      <li> webrick web server started</li>
      <li> Verified http://localhost:4567</li>
      <ol style="list-style-type: lower-alpha;">
        <li> Successfully displayed blog</li>
      </ol>
    </ol>
  </ol>
  <li> Install Thin web server</li>
  <ol style="list-style-type: upper-alpha;">
    <li> gem install thin</li>
    <li> gem list</li>
    <ol style="list-style-type: lower-roman;">
      <li> Result:</li>
      <ol style="list-style-type: lower-alpha;">
        <li> bundler (1.1.3)</li>
         daemons (1.1.8)<br \> 
         eventmachine (0.12.10)<br \> 
         rack (1.4.1)<br \> 
         rack-protection (1.2.0)<br \> 
         rake (0.9.2.2)<br \> 
         rubygems-bundler (1.0.2)<br \> 
         rvm (1.11.3.3)<br \> 
         sinatra (1.3.2)<br \> 
         thin (1.3.1)<br \> 
         tilt (1.3.3)<br \> 
       </ol>
     </ol>
     <li> Test loads by default</li>
    <ol style="list-style-type: lower-roman;">
      <li> ruby blog.rb</li>
      <ol style="list-style-type: lower-alpha;">
        <li> Result: loaded WEBrick -> that's a fail</li>
      </ol>
       <li> edit config.ru</li>
      <ol style="list-style-type: lower-alpha;">
        <li> added: gem 'thin'</li>
      </ol>
       <li> bundle install</li>
       <li> ruby blog.rb</li>
      <ol style="list-style-type: lower-alpha;">
        <li> Result: loaded WEBrick -> that's another fail</li>
      </ol>
       <li> Test thin on it's own: thin start</li>
       <li> returns openssl error exactly as described in: https://rvm.io/packages/openssl/</li>
       <li> Follow instructions</li>
      <ol style="list-style-type: lower-alpha;">
        <li> remove rvm path and reinstall -> this crashed, reverted to snapshot</li>
        <li> tried to find openssl path -not sure what to choose</li>
        <li> give up, use WEBrick</li>
      </ol>
    </ol>
  </ol>
</ol> 
</p>
