<h3>Weekend wrap-up:</h3><br />
<p>
In an effort to find a book that would help me interact with people that don't put such a high value on life-long learning, I stumbled across another book, which was pretty much the opposite of what I was looking for but now, it seems, I don't care about my first hunt any longer.<br />
Started and finished reading <a href="http://www.geoffcolvin.com/books/talent-is-overrated-by-geoff-colvin/"><i>"Talent is Overrated" by Geoff Colvin</i></a>.  It's so funny that <i>"The Secret"</i> should be so popular when the book by Colvin has, without exageration, the <b>REAL</b> "secret" to success.  But, unlike "magic", there is work involved and that scares away the majority of people.  Colvin's book is still a best seller so there's hope for humanity yet!  I was excstatic to find such a thorough book on the subject.  I will be employing these techniques of deliberate practice from now on.  So I decided to come up with a multi-pronged attack plan for increasing my skills.
</p>
<br />
<h3>Deliberate Practice Plan</h3><br />
<ol>
  <li>Feedback loop</li>
    <ol style="list-style-type:lower-alpha">
      <li>Each subject area has it's own feedback loop (including feedback loops in general)</li>
      <li>Like the unit test, each loop will have expectations for quantifiable results within scope of the domain of study</li>
      <li>Feedback loops will favour "learning zone" area of difficulty</li>
      <li>Feedback loops will also favour quick results on repeatable functions with documentable modifications to process</li>
    </ol>
  <li>Algorithms and Data Structures</li>
    <ol style="list-style-type:lower-alpha">
      <li>Study <a href="http://en.wikipedia.org/wiki/The_Art_of_Computer_Programming"><i>"The Art of Computing"</i> by Donald Knuth</a>.  Never read it, always wanted to.  OR...</li>
      <li><a href="http://www.youtube.com/playlist?list=PLE621E25B3BF8B9D1&feature=plcp">Youtube lectures</a> by <a href="https://wiki.cse.unsw.edu.au/gandt/RichardBuckland/CV">Richard Buckland</a></li>
    </ol>
  <li>Mathematics</li>
    <ol style="list-style-type:lower-alpha">
      <li>Identify biggest needs</li>
      <li>Identify biggest weaknesses</li>
    </ol>
  <li>Writing Skills</li>
    <ol style="list-style-type:lower-alpha">
      <li>Ben Franklin approach using other's blogs, or</li>
      <li>Pick-up the quintessential writing books</li>
    </ol>
  <li>Ruby Dev</li>
    <ol style="list-style-type:lower-alpha">
      <li>Web Framework: Sinatra or</li>
      <li>Ben Franklin approach using other's code or </li>
      <li>Setup new virtual appliance</li>
    </ol>
  <li>Libertarian Politics</li>
    <ol style="list-style-type:lower-alpha">
      <li>Mourn the Ron Paul campaign</li>
      <li>See what I can do</li>
    </ol>
</ol>
<br />
<h3>Progression:</h3><br />
<p>
Starting with Buckland lectures #5 of COMP1927 (a little tired, so listening to a basic cs lecture seemed a little easier than my other tasks).<br />
<br />
<b>Feedback loop:  </b>  My first time writing a lecture learning plan (shouldn't be, but there you have it), so here goes:
<ol>
  <li>Give my feedback loop a name and version #.</li>
  <li>Quick identify lecture and presumed topic</li>
  <li>Start lecture</li>
  <li>Identify topic</li>
    <ol style="list-style-type:lower-alpha">
      <li>Write down what I think my knowledge level is on the topic</li>
      <li>Take brief notes</li>
      <li>Identify any excercises mentioned</li>
      <li>If I feel a break is needed to try out my subject knowledge before answers are told, do so and document</li>
      <li>If answers are given to in-lecture notes, write them separate from problem so that the problem can be tried on my own</li>
    </ol>
  <li>repeat for each topic</li>
  <li>When lecture summary is about to happen or at the end if it doesn't, write lecture summary in my own words</li>
  <li>Post lecture</li>
  <li>Write down what I think my knowledge level is on the topic(s) after seeing lecture</li>
  <li>Write out a plan to test my knowledge on the topics</li>
  <li>Execute knowledge test plan</li>
  <li>Score the results</li>
  <li>Qualitatively analyze my work and tweek the feedback loop</li>
  <li>If further work is needed to improve my skills, identify and plan knowledge gain feedback loop</li>
</ol><br />
<b>Algorithms and Data Structures:  Online Lecture 5 for Comp1927 by R. Buckland</b><br />
<ol>
  <li>Feedback loop created</li>
  <li>Started lecture</li>
  <li>Created Selection sort before discussed in lecture</li>
  <li>Predicted Big O to n^2 for complexity -> correct
  <li>Created Insertion sort before discussed in lecture</li>
  <li>Predicted Big O to be n to n^2 for complexity (best case to worst) -> correct</li>
  <li>Need to upload feedback loop</li>
</ol>
</p>
<br />
<h3>Digression:</h3><br />
<p>
I'm sure there will be some  lol
</p>
